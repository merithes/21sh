tabs + backdel won't work correctly
	|_>	This is due to the method I use, as I go back
		one'slot' per one 'slot', and tabs are 4 slots
		(or maybe more depending on the term.
		I need to check that)
Resolved:
You're not supposed to print tabs, duh.

___-_________________________________________________________________________-__
typing keys more than there is space to on a single line will
work, it will go to the next line, but it's not possible to
go back to the previous line, may it be with arrows or backdel
	|_>	I use a 'go back one by one' technique, which
		ignores newlines.
Resolved:
Issue only occuring on Linux (Fedora, Terminator). Unexisting termcap ?

___-_________________________________________________________________________-__
entering a blank line will add it to the cmd history.Not supposed to happen
	|_>	I simply append a copy of the current cmdl to the history chained list.
		I should check if the actual cmdl is empty (or contains only spaces)
Resolved:
Added a check before registering the history.

___-_________________________________________________________________________-__
segfault on crl+d
	|_>	Wrong free when buffer is empty (or filled with spaces) on 1st return
Resolved:
won't free if here is no previous history element.

___-_________________________________________________________________________-__
when going back using left arrow, pressing space will re-print characters of
the precedent string. Not supposed to happen(don't you say) but works in every
case (not hard to reproduce)
	|_>	I worked only on the del keys, totaly forgot the insertion thing. Not a
		bug, just a forgotten feature. Doesn't work as instended since it
		wasn't intended in the first place
Resolved.

___-_________________________________________________________________________-__
separators issue: "ls ; ls" works as intended, but "ls ;ls" doesn't detect the
";" due to the fact that it is attached to the "ls".
	|_> Will be a recuring problem when we add the other types of separators
		too. I suggest modifying the arguments list in "exec_cli_lst" after the
		first "splitter_alt" function call, in order to detect such things 
		before/while  doing cli expansion.
Resolved:
Added a function tha re-parses the whole thing, detects delimiters that are in
un-quoted 'words', and re-split the thing correctly.
For example a "ls ;ls" command used to be splitted as "ls" ";ls" and now it
re-splits the previous statement into "ls" ";" "ls".

___-_________________________________________________________________________-__
Segfault on "invalid amount of quotes"
	|_>	"invalid amount of quotes" is what the splitter returns if a sentence
		contains an invalid amount of valid quotes, which returns 'NULL'. The
		re-splitted mentionned in the previous issue statement is probably the
		cause of that trouble

___-_________________________________________________________________________-__
Some CTRL+letter combination messes up the input reception ("get_line")
	|_>	letters concerned: H, K (afaik)

___-_________________________________________________________________________-__
Weird characters may appear after the implementation of the redirection token
split. Don't know if it was me mistyping a letter because I can't seem to get it
to bug back again. Might be because of 'unicode' reasons.
